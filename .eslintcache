[{"/Users/almazsaripov/Documents/Projects/todo-list/src/index.js":"1","/Users/almazsaripov/Documents/Projects/todo-list/src/App.js":"2","/Users/almazsaripov/Documents/Projects/todo-list/src/components/List/index.jsx":"3","/Users/almazsaripov/Documents/Projects/todo-list/src/components/AddListButton/index.jsx":"4","/Users/almazsaripov/Documents/Projects/todo-list/src/components/Badge/index.jsx":"5","/Users/almazsaripov/Documents/Projects/todo-list/src/components/Tasks/index.jsx":"6","/Users/almazsaripov/Documents/Projects/todo-list/src/components/AddListButton/AddListButton.jsx":"7","/Users/almazsaripov/Documents/Projects/todo-list/src/components/Tasks/AddTaskForm.jsx":"8"},{"size":220,"mtime":1610013307768,"results":"9","hashOfConfig":"10"},{"size":4174,"mtime":1610013307758,"results":"11","hashOfConfig":"10"},{"size":1091,"mtime":1610013307763,"results":"12","hashOfConfig":"10"},{"size":76,"mtime":1609916539976,"results":"13","hashOfConfig":"10"},{"size":289,"mtime":1609829041783,"results":"14","hashOfConfig":"10"},{"size":1902,"mtime":1610096253939,"results":"15","hashOfConfig":"10"},{"size":2946,"mtime":1609927006572,"results":"16","hashOfConfig":"10"},{"size":1581,"mtime":1610013307764,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"urgjjo",{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/almazsaripov/Documents/Projects/todo-list/src/index.js",[],["38","39"],"/Users/almazsaripov/Documents/Projects/todo-list/src/App.js",["40","41","42"],"import React, {useEffect} from 'react'\nimport List from \"./components/List\";\nimport AddListButton from \"./components/AddListButton\";\n// import DB from '../src/assets/db.json'\nimport Tasks from \"./components/Tasks\";\nimport axios from \"axios\";\n\n\n// data.map(item => {\n//     item.color = item.color.name;\n//     return item\n// }\n\nfunction App() {\n\n\n    let [lists, setLists] = React.useState(null);\n    let [colors, setColors] = React.useState(null)\n    let [activeItem,setactiveItem]=React.useState(null)\n\n    useEffect(() => {\n        axios.get('http://localhost:3001/lists?_expand=color&_embed=tasks').then(({data}) => {\n            setLists(data);\n        });\n\n        axios.get('http://localhost:3001/colors').then(({data}) => {\n            setColors(data);\n        });\n    }, [])\n\n\n    const onAddList = (obj) => {\n        setLists([...lists, obj])\n        console.log('добален', obj)\n    }\n\n    const onRemoveList = (id) => {\n        setLists(lists.filter(i => i.id != id))\n        axios.delete(`http://localhost:3001/lists/${id}`).then(()=>{\n        })\n    }\n\n    const updateListName=(id, newTitle)=>{\n        console.log('Функция updateListName')\n        const newObj=[...lists]\n        newObj.find(i=>i.id==id).name=newTitle\n        setLists(newObj)\n        axios.patch('http://localhost:3001/lists/'+id,{name: newTitle}).catch(()=>alert('Не получилось обновить название списка'))\n    }\n\n    const addTask=(listId, text)=>{\n        const obj={listId, text, \"completed\": false }\n        const newList=lists.map(i=>{\n            if (i.id==listId) {\n                i.tasks=[...i.tasks,obj]\n            }\n            return i\n        })\n        axios.post('http://localhost:3001/tasks', obj)\n         setLists(newList)\n\n    }\n\n    return (\n        <div className=\"todo\">\n            <div className={'todo__sidebar'}>\n                <List items={[\n                    {\n                        icon: <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\"\n                                   xmlns=\"http://www.w3.org/2000/svg\">\n                            <path\n                                d=\"M12.96 8.10001H7.74001C7.24321 8.10001 7.20001 8.50231 7.20001 9.00001C7.20001 9.49771 7.24321 9.90001 7.74001 9.90001H12.96C13.4568 9.90001 13.5 9.49771 13.5 9.00001C13.5 8.50231 13.4568 8.10001 12.96 8.10001V8.10001ZM14.76 12.6H7.74001C7.24321 12.6 7.20001 13.0023 7.20001 13.5C7.20001 13.9977 7.24321 14.4 7.74001 14.4H14.76C15.2568 14.4 15.3 13.9977 15.3 13.5C15.3 13.0023 15.2568 12.6 14.76 12.6ZM7.74001 5.40001H14.76C15.2568 5.40001 15.3 4.99771 15.3 4.50001C15.3 4.00231 15.2568 3.60001 14.76 3.60001H7.74001C7.24321 3.60001 7.20001 4.00231 7.20001 4.50001C7.20001 4.99771 7.24321 5.40001 7.74001 5.40001ZM4.86001 8.10001H3.24001C2.74321 8.10001 2.70001 8.50231 2.70001 9.00001C2.70001 9.49771 2.74321 9.90001 3.24001 9.90001H4.86001C5.35681 9.90001 5.40001 9.49771 5.40001 9.00001C5.40001 8.50231 5.35681 8.10001 4.86001 8.10001ZM4.86001 12.6H3.24001C2.74321 12.6 2.70001 13.0023 2.70001 13.5C2.70001 13.9977 2.74321 14.4 3.24001 14.4H4.86001C5.35681 14.4 5.40001 13.9977 5.40001 13.5C5.40001 13.0023 5.35681 12.6 4.86001 12.6ZM4.86001 3.60001H3.24001C2.74321 3.60001 2.70001 4.00231 2.70001 4.50001C2.70001 4.99771 2.74321 5.40001 3.24001 5.40001H4.86001C5.35681 5.40001 5.40001 4.99771 5.40001 4.50001C5.40001 4.00231 5.35681 3.60001 4.86001 3.60001Z\"\n                                fill=\"black\"/>\n                        </svg>,\n                        name: 'Все задачи',\n                        active: true\n                    }\n                ]}/>\n                <List onClickItem={(i)=>{\n                    setactiveItem(i)\n                }} items={lists} onRemove={onRemoveList} activeItem={activeItem && activeItem}\n                      isRemovable\n                />\n                <AddListButton onAddList={onAddList} colors={colors}/>\n            </div>\n            <div className={'todo__tasks'}>\n                {activeItem && lists &&<Tasks addTask={addTask} updateListName={updateListName} lists={activeItem }/>}\n            </div>\n\n        </div>\n    );\n}\n\nexport default App;\n","/Users/almazsaripov/Documents/Projects/todo-list/src/components/List/index.jsx",["43"],"import React from 'react';\nimport className from 'classnames'\nimport './List.scss'\nimport Badge from \"../Badge\";\nimport removeSvg from '../../assets/img/remove.svg'\n\n\nfunction List({items,isRemovable,onClick,onRemove,onClickItem,activeItem}) {\n    console.log(items)\n    const questionBeforeRemoveList=(id)=>{\n        if (window.confirm('Вы точно хотите удалить список?')) onRemove(id)\n    }\n\n    return (\n        <ul onClick={onClick} className=\"list\">\n            {items && items.map((i,index) => {\n                return <li onClick={onClickItem ? ()=>onClickItem(i) : null} key={index} className={className(i.className,{'active': activeItem &&  i.id==activeItem.id})}>\n                    <i>{i.icon ? i.icon : (<Badge color={i.color.name}/>)}</i>\n                    <span>{i.name} {i.tasks && `(${i.tasks.length})`}</span>\n                    {isRemovable&&<img onClick={()=>questionBeforeRemoveList(i.id)} className={'list__remove-icon'} src={removeSvg} alt=\"remove icon\"/>}\n\n                </li>\n            })}\n        </ul>\n    );\n}\n\nexport default List;","/Users/almazsaripov/Documents/Projects/todo-list/src/components/AddListButton/index.jsx",[],"/Users/almazsaripov/Documents/Projects/todo-list/src/components/Badge/index.jsx",[],"/Users/almazsaripov/Documents/Projects/todo-list/src/components/Tasks/index.jsx",["44"],"/Users/almazsaripov/Documents/Projects/todo-list/src/components/AddListButton/AddListButton.jsx",["45","46"],"import React, {useState, useEffect} from \"react\";\nimport List from \"../List\";\nimport './addListButton.scss'\nimport Badge from \"../Badge\";\nimport closeSvg from '../../assets/img/close.svg'\nimport axios from \"axios\";\n\nconst AddListButton = ({colors, onAddList}) => {\n\n    let [visiblePopup, setvisiblePopup] = useState(false)\n    let [selectedColor, selectColor] = useState(3)\n    let [inputValue, setInputValue] = useState('')\n    let [isLoading, setIsLoading] = useState(false)\n\n    useEffect(() => {\n        if (Array.isArray(colors)) selectColor(colors[0].id)\n\n    }, [colors])\n\n    const onClose = () => {\n        setInputValue('')\n        setvisiblePopup(false)\n        selectColor(colors[0].id)\n    }\n\n    const addList = () => {\n        if (!inputValue) {\n            alert('Чтобы дабавить задачу введите название.');\n            return\n        }\n        setIsLoading(true)\n        axios.post('http://localhost:3001/lists', {name: inputValue, colorId: selectedColor})\n            .then(({data}) => {\n                const listObj = {...data, color: {name: colors.find(i => i.id == selectedColor).name}}\n                onAddList(listObj)\n            }).finally(() => {\n            onClose()\n            setIsLoading(false)\n        })\n    }\n\n    return (\n        <div className={'add-list'}>\n            <List onClick={() => {\n                if (visiblePopup) onClose()\n                setvisiblePopup(!visiblePopup)\n            }}\n\n                  items={[\n                {\n                    className: 'list__add-button',\n                    icon: <svg width=\"12\" height=\"12\" viewBox=\"0 0 16 16\" fill=\"none\"\n                               xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M8 1V15\" stroke=\"black\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                        <path d=\"M1 8H15\" stroke=\"black\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                    </svg>,\n                    name: 'Добавить список'\n                }\n            ]}/>\n\n            {visiblePopup && <div className={'add-list__popup'}>\n                <img src={closeSvg} onClick={onClose} className={'add-list__popup-close-btn'} alt=\"Close button\"/>\n                <input onChange={(e) => setInputValue(e.target.value)} value={inputValue} className={'field'}\n                       placeholder={'Название списка'} type=\"text\"/>\n                <div className={'add-list__popup-color'}>\n                    {colors.map(i => <Badge className={selectedColor == i.id && 'active'} onClick={() => {\n                        selectColor(i.id)\n                    }} key={i.id} color={i.name}/>)}\n\n                </div>\n                <button onClick={addList} className={'button'}>{isLoading ? 'Добавление' : 'Добавить'}</button>\n\n            </div>}\n        </div>\n    );\n};\nexport default AddListButton;","/Users/almazsaripov/Documents/Projects/todo-list/src/components/Tasks/AddTaskForm.jsx",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":38,"column":41,"nodeType":"53","messageId":"54","endLine":38,"endColumn":43},{"ruleId":"51","severity":1,"message":"55","line":46,"column":28,"nodeType":"53","messageId":"54","endLine":46,"endColumn":30},{"ruleId":"51","severity":1,"message":"55","line":54,"column":21,"nodeType":"53","messageId":"54","endLine":54,"endColumn":23},{"ruleId":"51","severity":1,"message":"55","line":17,"column":153,"nodeType":"53","messageId":"54","endLine":17,"endColumn":155},{"ruleId":"51","severity":1,"message":"52","line":10,"column":33,"nodeType":"53","messageId":"54","endLine":10,"endColumn":35},{"ruleId":"51","severity":1,"message":"55","line":34,"column":79,"nodeType":"53","messageId":"54","endLine":34,"endColumn":81},{"ruleId":"51","severity":1,"message":"55","line":66,"column":70,"nodeType":"53","messageId":"54","endLine":66,"endColumn":72},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]