[{"/Users/almazsaripov/Documents/Projects/todo-list/src/index.js":"1","/Users/almazsaripov/Documents/Projects/todo-list/src/App.js":"2","/Users/almazsaripov/Documents/Projects/todo-list/src/components/List/index.jsx":"3","/Users/almazsaripov/Documents/Projects/todo-list/src/components/AddListButton/index.jsx":"4","/Users/almazsaripov/Documents/Projects/todo-list/src/components/Badge/index.jsx":"5","/Users/almazsaripov/Documents/Projects/todo-list/src/components/Tasks/index.jsx":"6"},{"size":220,"mtime":1609741657587,"results":"7","hashOfConfig":"8"},{"size":2701,"mtime":1609913492009,"results":"9","hashOfConfig":"8"},{"size":920,"mtime":1609841614705,"results":"10","hashOfConfig":"8"},{"size":2235,"mtime":1609836919436,"results":"11","hashOfConfig":"8"},{"size":289,"mtime":1609829041783,"results":"12","hashOfConfig":"8"},{"size":1102,"mtime":1609870708340,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"urgjjo",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/almazsaripov/Documents/Projects/todo-list/src/index.js",[],["28","29"],"/Users/almazsaripov/Documents/Projects/todo-list/src/App.js",["30","31"],"/Users/almazsaripov/Documents/Projects/todo-list/src/components/List/index.jsx",[],"/Users/almazsaripov/Documents/Projects/todo-list/src/components/AddListButton/index.jsx",["32","33"],"import React,{useState} from \"react\";\nimport List from \"../List\";\nimport './addListButton.scss'\nimport Badge from \"../Badge\";\nimport closeSvg from '../../assets/img/close.svg'\n\nconst AddListButton = ({colors,onAddList }) => {\n    let [visiblePopup,setvisiblePopup]=useState(false)\n    let [selectedColor, selectColor]=useState(colors[0].id)\n    let [inputValue,setInputValue]=useState('')\n\n    const onClose=()=>{\n        setInputValue('')\n        setvisiblePopup(false)\n        selectColor(colors[0].id)\n    }\n\n    const addList=()=>{\n        if (!inputValue) { alert('Чтобы дабавить задачу введите название.'); return}\n        onAddList({id: Math.random(), name: inputValue, color: colors.find(i=>i.id==selectedColor).name })\n        onClose()\n\n    }\n    return (\n        <div  className={'add-list'}>\n        <List onClick={()=> {\n            if (visiblePopup) onClose()\n            setvisiblePopup(!visiblePopup)\n        }}  items={[\n            {\n                className: 'list__add-button',\n                icon: <svg width=\"12\" height=\"12\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M8 1V15\" stroke=\"black\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                    <path d=\"M1 8H15\" stroke=\"black\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                </svg>,\n                name: 'Добавить список'\n            }\n        ]}/>\n            {visiblePopup&&<div className={'add-list__popup'}>\n                <img src={closeSvg} onClick={onClose} className={'add-list__popup-close-btn'} alt=\"Close button\"/>\n                <input onChange={(e)=>setInputValue(e.target.value)} value={inputValue} className={'field'} placeholder={'Название списка'} type=\"text\"/>\n                <div className={'add-list__popup-color'}>\n                        {colors.map(i=><Badge className={selectedColor==i.id && 'active'} onClick={()=>{selectColor(i.id)}}  key={i.id} color={i.name}/>)}\n\n                </div>\n                <button onClick={addList} className={'button'}>Добавить</button>\n\n            </div>}\n        </div>\n    );\n};\nexport default AddListButton;","/Users/almazsaripov/Documents/Projects/todo-list/src/components/Badge/index.jsx",[],"/Users/almazsaripov/Documents/Projects/todo-list/src/components/Tasks/index.jsx",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":10,"column":42,"nodeType":"40","messageId":"41","endLine":10,"endColumn":44},{"ruleId":"38","severity":1,"message":"42","line":21,"column":38,"nodeType":"40","messageId":"41","endLine":21,"endColumn":40},{"ruleId":"38","severity":1,"message":"39","line":20,"column":83,"nodeType":"40","messageId":"41","endLine":20,"endColumn":85},{"ruleId":"38","severity":1,"message":"39","line":43,"column":71,"nodeType":"40","messageId":"41","endLine":43,"endColumn":73},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]