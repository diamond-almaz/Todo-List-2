[{"/Users/almazsaripov/Documents/Projects/todo-list/src/index.js":"1","/Users/almazsaripov/Documents/Projects/todo-list/src/App.js":"2","/Users/almazsaripov/Documents/Projects/todo-list/src/components/List/index.jsx":"3","/Users/almazsaripov/Documents/Projects/todo-list/src/components/AddListButton/index.jsx":"4","/Users/almazsaripov/Documents/Projects/todo-list/src/components/Badge/index.jsx":"5","/Users/almazsaripov/Documents/Projects/todo-list/src/components/Tasks/index.jsx":"6","/Users/almazsaripov/Documents/Projects/todo-list/src/components/AddListButton/AddListButton.jsx":"7","/Users/almazsaripov/Documents/Projects/todo-list/src/components/Tasks/AddTaskForm.jsx":"8","/Users/almazsaripov/Documents/Projects/todo-list/src/components/Tasks/Task.jsx":"9"},{"size":304,"mtime":1610100493378,"results":"10","hashOfConfig":"11"},{"size":6930,"mtime":1610170586842,"results":"12","hashOfConfig":"11"},{"size":1096,"mtime":1610115098454,"results":"13","hashOfConfig":"11"},{"size":76,"mtime":1609916539976,"results":"14","hashOfConfig":"11"},{"size":289,"mtime":1609829041783,"results":"15","hashOfConfig":"11"},{"size":1184,"mtime":1610113081421,"results":"16","hashOfConfig":"11"},{"size":3017,"mtime":1610169350918,"results":"17","hashOfConfig":"11"},{"size":1710,"mtime":1610169127000,"results":"18","hashOfConfig":"11"},{"size":3359,"mtime":1610109706568,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"urgjjo",{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/almazsaripov/Documents/Projects/todo-list/src/index.js",[],["42","43"],"/Users/almazsaripov/Documents/Projects/todo-list/src/App.js",["44","45","46","47","48"],"/Users/almazsaripov/Documents/Projects/todo-list/src/components/List/index.jsx",["49","50","51","52","53"],"import React from 'react';\nimport className from 'classnames'\nimport './List.scss'\nimport Badge from \"../Badge\";\nimport removeSvg from '../../assets/img/remove.svg'\n\n\nfunction List({items,isRemovable,onClick,onRemove,onClickItem,activeItem}) {\n    const questionBeforeRemoveList=(id)=>{\n        if (window.confirm('Вы точно хотите удалить список?')) onRemove(id)\n    }\n\n    return (\n        <ul onClick={onClick} className=\"list\">\n            {items && items.map((i,index) => {\n                return <li onClick={onClickItem ? ()=>onClickItem(i) : null} key={index} className={className(i.className,{'active':  i.active && !activeItem || activeItem  && i.id==activeItem.id})}>\n                    <i>{i.icon ? i.icon : (<Badge color={i.color.name}/>)}</i>\n                    <span>{i.name} {i.tasks && `(${i.tasks.length})`}</span>\n                    {isRemovable&&<img onClick={()=>questionBeforeRemoveList(i.id)} className={'list__remove-icon'} src={removeSvg} alt=\"remove icon\"/>}\n\n                </li>\n            })}\n        </ul>\n    );\n}\n\nexport default List;","/Users/almazsaripov/Documents/Projects/todo-list/src/components/AddListButton/index.jsx",[],"/Users/almazsaripov/Documents/Projects/todo-list/src/components/Badge/index.jsx",[],"/Users/almazsaripov/Documents/Projects/todo-list/src/components/Tasks/index.jsx",["54"],"import React from 'react';\nimport './Tasks.scss'\nimport editSvg from '../../assets/img/edit.svg'\nimport AddTaskForm from \"./AddTaskForm\";\nimport Task from \"./Task\";\n\nconst Tasks = ({lists,updateListName,addTask,withoutEmpty,onRemoveTask,onEditTask}) => {\n     const showFromUpdate=()=>{\n        let newTitle=prompt('Введите пожалуйста название', lists.name)\n        if (newTitle && newTitle!=lists.name) {\n            updateListName(lists.id,newTitle)\n        }\n    }\n    return (<div className=\"tasks\">\n            <h2 style={{color: lists.color.hex}} className={'tasks__title'}>\n                {lists.name}\n                <img onClick={showFromUpdate} src={editSvg} alt='Edit icon'/>\n            </h2>\n            <div className=\"tasks__items\">\n                {lists.tasks && lists.tasks.length > 0 ? lists.tasks.map(i => {\n                    return <Task onEdit={onEditTask} onRemove={onRemoveTask} key={i.id} {...i}/>\n                }) : !withoutEmpty && (<h2>Задачи отcутcтвуют</h2>)}\n                <AddTaskForm listId={lists.id} addTask={addTask}/>\n\n            </div>\n        </div>\n    );\n}\n\nexport default Tasks;\n","/Users/almazsaripov/Documents/Projects/todo-list/src/components/AddListButton/AddListButton.jsx",["55"],"import React, {useState, useEffect} from \"react\";\nimport List from \"../List\";\nimport './addListButton.scss'\nimport Badge from \"../Badge\";\nimport closeSvg from '../../assets/img/close.svg'\nimport axios from \"axios\";\n\nconst AddListButton = ({colors, onAddList}) => {\n\n    let [visiblePopup, setvisiblePopup] = useState(false)\n    let [selectedColor, selectColor] = useState(null)\n    let [inputValue, setInputValue] = useState('')\n    let [isLoading, setIsLoading] = useState(false)\n\n    useEffect(() => {\n        if (Array.isArray(colors)) selectColor(colors[0].id)\n\n    }, [colors])\n\n    const onClose = () => {\n        setInputValue('')\n        setvisiblePopup(false)\n        selectColor(colors[0].id)\n    }\n\n    const addList = () => {\n        if (!inputValue) {\n            alert('Чтобы добавить название списка введите значение.');\n            return\n        }\n        setIsLoading(true)\n        axios.post('http://localhost:3001/lists', {name: inputValue, colorId: selectedColor})\n            .then(({data}) => {\n                const color=colors.find(i => i.id === selectedColor)\n                const listObj = {...data, color: {name: color.name, hex: color.hex}}\n                onAddList(listObj)\n            }).finally(() => {\n            onClose()\n            setIsLoading(false)\n        })\n    }\n\n    return (\n        <div className={'add-list'}>\n            <List onClick={() => {\n                if (visiblePopup) onClose()\n                setvisiblePopup(!visiblePopup)\n            }}\n\n                  items={[\n                {\n                    className: 'list__add-button',\n                    icon: <svg width=\"12\" height=\"12\" viewBox=\"0 0 16 16\" fill=\"none\"\n                               xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M8 1V15\" stroke=\"black\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                        <path d=\"M1 8H15\" stroke=\"black\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                    </svg>,\n                    name: 'Добавить список'\n                }\n            ]}/>\n\n            {visiblePopup && <div className={'add-list__popup'}>\n                <img src={closeSvg} onClick={onClose} className={'add-list__popup-close-btn'} alt=\"Close button\"/>\n                <input onChange={(e) => setInputValue(e.target.value)} value={inputValue} className={'field'}\n                       placeholder={'Название списка'} type=\"text\"/>\n                <div className={'add-list__popup-color'}>\n                    {colors.map(i => <Badge className={selectedColor == i.id && 'active'} onClick={() => {\n                        selectColor(i.id)\n                    }} key={i.id} color={i.name}/>)}\n\n                </div>\n                <button onClick={addList} className={'button'}>{isLoading ? 'Добавление' : 'Добавить'}</button>\n\n            </div>}\n        </div>\n    );\n};\nexport default AddListButton;","/Users/almazsaripov/Documents/Projects/todo-list/src/components/Tasks/AddTaskForm.jsx",[],"/Users/almazsaripov/Documents/Projects/todo-list/src/components/Tasks/Task.jsx",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":24,"column":52,"nodeType":"62","messageId":"63","endLine":24,"endColumn":54},{"ruleId":"60","severity":1,"message":"64","line":44,"column":41,"nodeType":"62","messageId":"63","endLine":44,"endColumn":43},{"ruleId":"60","severity":1,"message":"61","line":52,"column":28,"nodeType":"62","messageId":"63","endLine":52,"endColumn":30},{"ruleId":"60","severity":1,"message":"61","line":63,"column":28,"nodeType":"62","messageId":"63","endLine":63,"endColumn":30},{"ruleId":"60","severity":1,"message":"64","line":79,"column":56,"nodeType":"62","messageId":"63","endLine":79,"endColumn":58},{"ruleId":"65","severity":1,"message":"66","line":16,"column":144,"nodeType":"67","messageId":"68","endLine":16,"endColumn":146},{"ruleId":"65","severity":1,"message":"66","line":16,"column":159,"nodeType":"67","messageId":"68","endLine":16,"endColumn":161},{"ruleId":"65","severity":1,"message":"69","line":16,"column":159,"nodeType":"67","messageId":"68","endLine":16,"endColumn":161},{"ruleId":"65","severity":1,"message":"69","line":16,"column":174,"nodeType":"67","messageId":"68","endLine":16,"endColumn":176},{"ruleId":"60","severity":1,"message":"61","line":16,"column":181,"nodeType":"62","messageId":"63","endLine":16,"endColumn":183},{"ruleId":"60","severity":1,"message":"64","line":10,"column":33,"nodeType":"62","messageId":"63","endLine":10,"endColumn":35},{"ruleId":"60","severity":1,"message":"61","line":67,"column":70,"nodeType":"62","messageId":"63","endLine":67,"endColumn":72},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","no-global-assign","no-unsafe-negation"]