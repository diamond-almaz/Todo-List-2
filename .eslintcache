[{"/Users/almazsaripov/Documents/Projects/todo-list/src/index.js":"1","/Users/almazsaripov/Documents/Projects/todo-list/src/App.js":"2","/Users/almazsaripov/Documents/Projects/todo-list/src/components/List/index.jsx":"3","/Users/almazsaripov/Documents/Projects/todo-list/src/components/AddListButton/index.jsx":"4","/Users/almazsaripov/Documents/Projects/todo-list/src/components/Badge/index.jsx":"5","/Users/almazsaripov/Documents/Projects/todo-list/src/components/Tasks/index.jsx":"6","/Users/almazsaripov/Documents/Projects/todo-list/src/components/AddListButton/AddListButton.jsx":"7","/Users/almazsaripov/Documents/Projects/todo-list/src/components/Tasks/AddTaskForm.jsx":"8"},{"size":220,"mtime":1609741657587,"results":"9","hashOfConfig":"10"},{"size":4174,"mtime":1609943312053,"results":"11","hashOfConfig":"10"},{"size":1091,"mtime":1609927071756,"results":"12","hashOfConfig":"10"},{"size":76,"mtime":1609916539976,"results":"13","hashOfConfig":"10"},{"size":289,"mtime":1609829041783,"results":"14","hashOfConfig":"10"},{"size":1854,"mtime":1609941829905,"results":"15","hashOfConfig":"10"},{"size":2946,"mtime":1609927006572,"results":"16","hashOfConfig":"10"},{"size":1581,"mtime":1609943214533,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"urgjjo",{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/almazsaripov/Documents/Projects/todo-list/src/index.js",[],["38","39"],"/Users/almazsaripov/Documents/Projects/todo-list/src/App.js",["40","41","42"],"/Users/almazsaripov/Documents/Projects/todo-list/src/components/List/index.jsx",["43"],"import React from 'react';\nimport className from 'classnames'\nimport './List.scss'\nimport Badge from \"../Badge\";\nimport removeSvg from '../../assets/img/remove.svg'\n\n\nfunction List({items,isRemovable,onClick,onRemove,onClickItem,activeItem}) {\n    console.log(items)\n    const questionBeforeRemoveList=(id)=>{\n        if (window.confirm('Вы точно хотите удалить список?')) onRemove(id)\n    }\n\n    return (\n        <ul onClick={onClick} className=\"list\">\n            {items && items.map((i,index) => {\n                return <li onClick={onClickItem ? ()=>onClickItem(i) : null} key={index} className={className(i.className,{'active': activeItem &&  i.id==activeItem.id})}>\n                    <i>{i.icon ? i.icon : (<Badge color={i.color.name}/>)}</i>\n                    <span>{i.name} {i.tasks && `(${i.tasks.length})`}</span>\n                    {isRemovable&&<img onClick={()=>questionBeforeRemoveList(i.id)} className={'list__remove-icon'} src={removeSvg} alt=\"remove icon\"/>}\n\n                </li>\n            })}\n        </ul>\n    );\n}\n\nexport default List;","/Users/almazsaripov/Documents/Projects/todo-list/src/components/AddListButton/index.jsx",[],"/Users/almazsaripov/Documents/Projects/todo-list/src/components/Badge/index.jsx",[],"/Users/almazsaripov/Documents/Projects/todo-list/src/components/Tasks/index.jsx",["44"],"import React from 'react';\nimport './Tasks.scss'\nimport editSvg from '../../assets/img/edit.svg'\nimport AddTaskForm from \"./AddTaskForm\";\n\nconst Tasks = ({lists,updateListName,addTask}) => {\n    console.log('tasks')\n    const showFromUpdate=()=>{\n        let newTitle=prompt('Введите пожалуйста название', lists.name)\n        if (newTitle && newTitle!=lists.name) {\n            updateListName(lists.id,newTitle)\n        }\n    }\n    return (<div className=\"tasks\">\n            <h2 className={'tasks__title'}>\n                {lists.name}\n                <img onClick={showFromUpdate} src={editSvg} alt='Edit icon'/>\n            </h2>\n            <div className=\"tasks__items\">\n                {lists.tasks.length > 0 ? lists.tasks.map(i => {\n                    return <div key={i.id} className=\"tasks__items-row\">\n                        <div className={'checkbox'}>\n                            <input id={`task-${i.id}`} type=\"checkbox\"/>\n                            <label htmlFor={`task-${i.id}`}>\n                                <svg width=\"11\" height=\"8\" viewBox=\"0 0 11 8\" fill=\"none\"\n                                     xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path d=\"M9.29999 1.20001L3.79999 6.70001L1.29999 4.20001\" stroke=\"black\"\n                                          stroke-width=\"1.5\"\n                                          stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                                </svg>\n\n                            </label>\n                        </div>\n                        <input readOnly type=\"text\" value={i.text}/>\n                    </div>\n                }) : <h2>Задачи отcутcтвуют</h2>}\n                <AddTaskForm listId={lists.id} addTask={addTask}/>\n\n            </div>\n        </div>\n    );\n}\n\nexport default Tasks;\n","/Users/almazsaripov/Documents/Projects/todo-list/src/components/AddListButton/AddListButton.jsx",["45","46"],"import React, {useState, useEffect} from \"react\";\nimport List from \"../List\";\nimport './addListButton.scss'\nimport Badge from \"../Badge\";\nimport closeSvg from '../../assets/img/close.svg'\nimport axios from \"axios\";\n\nconst AddListButton = ({colors, onAddList}) => {\n\n    let [visiblePopup, setvisiblePopup] = useState(false)\n    let [selectedColor, selectColor] = useState(3)\n    let [inputValue, setInputValue] = useState('')\n    let [isLoading, setIsLoading] = useState(false)\n\n    useEffect(() => {\n        if (Array.isArray(colors)) selectColor(colors[0].id)\n\n    }, [colors])\n\n    const onClose = () => {\n        setInputValue('')\n        setvisiblePopup(false)\n        selectColor(colors[0].id)\n    }\n\n    const addList = () => {\n        if (!inputValue) {\n            alert('Чтобы дабавить задачу введите название.');\n            return\n        }\n        setIsLoading(true)\n        axios.post('http://localhost:3001/lists', {name: inputValue, colorId: selectedColor})\n            .then(({data}) => {\n                const listObj = {...data, color: {name: colors.find(i => i.id == selectedColor).name}}\n                onAddList(listObj)\n            }).finally(() => {\n            onClose()\n            setIsLoading(false)\n        })\n    }\n\n    return (\n        <div className={'add-list'}>\n            <List onClick={() => {\n                if (visiblePopup) onClose()\n                setvisiblePopup(!visiblePopup)\n            }}\n\n                  items={[\n                {\n                    className: 'list__add-button',\n                    icon: <svg width=\"12\" height=\"12\" viewBox=\"0 0 16 16\" fill=\"none\"\n                               xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M8 1V15\" stroke=\"black\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                        <path d=\"M1 8H15\" stroke=\"black\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                    </svg>,\n                    name: 'Добавить список'\n                }\n            ]}/>\n\n            {visiblePopup && <div className={'add-list__popup'}>\n                <img src={closeSvg} onClick={onClose} className={'add-list__popup-close-btn'} alt=\"Close button\"/>\n                <input onChange={(e) => setInputValue(e.target.value)} value={inputValue} className={'field'}\n                       placeholder={'Название списка'} type=\"text\"/>\n                <div className={'add-list__popup-color'}>\n                    {colors.map(i => <Badge className={selectedColor == i.id && 'active'} onClick={() => {\n                        selectColor(i.id)\n                    }} key={i.id} color={i.name}/>)}\n\n                </div>\n                <button onClick={addList} className={'button'}>{isLoading ? 'Добавление' : 'Добавить'}</button>\n\n            </div>}\n        </div>\n    );\n};\nexport default AddListButton;","/Users/almazsaripov/Documents/Projects/todo-list/src/components/Tasks/AddTaskForm.jsx",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":38,"column":41,"nodeType":"53","messageId":"54","endLine":38,"endColumn":43},{"ruleId":"51","severity":1,"message":"55","line":46,"column":28,"nodeType":"53","messageId":"54","endLine":46,"endColumn":30},{"ruleId":"51","severity":1,"message":"55","line":54,"column":21,"nodeType":"53","messageId":"54","endLine":54,"endColumn":23},{"ruleId":"51","severity":1,"message":"55","line":17,"column":153,"nodeType":"53","messageId":"54","endLine":17,"endColumn":155},{"ruleId":"51","severity":1,"message":"52","line":10,"column":33,"nodeType":"53","messageId":"54","endLine":10,"endColumn":35},{"ruleId":"51","severity":1,"message":"55","line":34,"column":79,"nodeType":"53","messageId":"54","endLine":34,"endColumn":81},{"ruleId":"51","severity":1,"message":"55","line":66,"column":70,"nodeType":"53","messageId":"54","endLine":66,"endColumn":72},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]